import telebot
import requests
import time

# === –¢–≤–æ–π Telegram Token ===
bot = telebot.TeleBot("7662884090:AAGFJzo8TRiXdVPklVD2A0VhMWFsLu6YRDc")

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞ ===
SITE_URL = "https://stlmodels.pro/wp-json/wp/v2/posts"
ACF_FIELD_NAME = "download_link"
CACHE_EXPIRATION_SECONDS = 600  # 10 –º–∏–Ω—É—Ç

# === –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∫—ç—à–∞ ===
cached_link = None
cached_time = 0

# === –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º ===
def get_latest_download_link():
    global cached_link, cached_time

    if cached_link and (time.time() - cached_time) < CACHE_EXPIRATION_SECONDS:
        return cached_link

    try:
        response = requests.get(SITE_URL)
        response.raise_for_status()
        posts = response.json()

        if posts and isinstance(posts, list):
            acf_data = posts[0].get('acf', {})
            link = acf_data.get(ACF_FIELD_NAME)

            if link:
                cached_link = link
                cached_time = time.time()
                return link

    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:", e)

    return None

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ Telegram ===
@bot.message_handler(commands=['start', 'download'])
def handle_start(message):
    link = get_latest_download_link()
    if link:
        bot.send_message(message.chat.id, f"üîó –í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:\n{link}")
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
bot.polling()
