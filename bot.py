import telebot
import requests
from telebot import types

TOKEN = '7662884090:AAGFJzo8TRiXdVPklVD2A0VhMWFsLu6YRDc'
CHANNELS = ['@Amazing_Photoshop', '@Stuff3D']  # —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å —Å–≤–æ–∏ –∫–∞–Ω–∞–ª—ã

bot = telebot.TeleBot(TOKEN)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–∞–Ω–∞–ª
def check_subscription(user_id):
    for channel in CHANNELS:
        try:
            status = bot.get_chat_member(chat_id=channel, user_id=user_id).status
            if status in ['member', 'administrator', 'creator']:
                return True
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∞–Ω–∞–ª–∞ {channel}: {e}")
    return False

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id

    if check_subscription(user_id):
        # –ü–æ–¥–ø–∏—Å–∞–Ω ‚Äî –≤—ã–¥–∞—ë–º —Å—Å—ã–ª–∫—É
        post_id = message.text.split()[-1] if len(message.text.split()) > 1 else None
        if post_id:
            try:
                res = requests.get(f"https://stlmodels.pro/wp-json/wp/v2/posts/{post_id}")
                data = res.json()
                download_link = data.get('acf', {}).get('download_link')
                if download_link:
                    bot.send_message(user_id, f"‚úÖ –í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ:\n{download_link}")
                else:
                    bot.send_message(user_id, "‚ö†Ô∏è –°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —ç—Ç–æ–º –ø–æ—Å—Ç–µ.")
            except Exception as e:
                print(e)
                bot.send_message(user_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.")
        else:
            bot.send_message(user_id, "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É —Å–æ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –º–æ–¥–µ–ª—å.")
    else:
        # –ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω ‚Äî –ø—Ä–æ—Å–∏–º –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
        markup = types.InlineKeyboardMarkup()
        for ch in CHANNELS:
            markup.add(types.InlineKeyboardButton("üì¢ –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", url=f"https://t.me/{ch[1:]}"))
        markup.add(types.InlineKeyboardButton("üîÅ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_sub"))
        bot.send_message(user_id, "üõë –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã –Ω–∏–∂–µ:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: call.data == "check_sub")
def callback_check(call):
    user_id = call.from_user.id
    if check_subscription(user_id):
        bot.answer_callback_query(call.id, "‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!")
        bot.send_message(user_id, "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ —Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª.")
    else:
        bot.answer_callback_query(call.id, "‚ùå –í—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å.")
        bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã –∏ –Ω–∞–∂–º–∏ \"–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É\".")

# –ó–∞–ø—É—Å–∫
bot.infinity_polling()
