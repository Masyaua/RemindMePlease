import os
from dotenv import load_dotenv
from telethon import TelegramClient, events, Button
import aiohttp

# –ó–∞–≥—Ä—É–∑–∫–∞ .env
load_dotenv()

API_ID = int(os.getenv("API_ID"))
API_HASH = os.getenv("API_HASH")
BOT_TOKEN = os.getenv("BOT_TOKEN")
WORDPRESS_URL = os.getenv("WORDPRESS_URL")
CHANNELS = os.getenv("CHANNELS").split(",")

bot = TelegramClient('bot', API_ID, API_HASH).start(bot_token=BOT_TOKEN)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã
async def is_user_subscribed(user_id):
    for channel in CHANNELS:
        try:
            participant = await bot.get_participant(f"@{channel}", user_id)
            if participant is None:
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª @{channel}")
                return False
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª @{channel} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            return False
    return True

@bot.on(events.NewMessage(pattern="/start"))
async def handle_start(event):
    user_id = event.sender_id
    await event.respond(
        "üëã –ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã:",
        buttons=[
            [Button.url(f"üì¢ {ch}", f"https://t.me/{ch}")] for ch in CHANNELS
        ] + [[Button.inline("üîÅ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", b"check_sub")]]
    )

@bot.on(events.CallbackQuery(data=b"check_sub"))
async def handle_check_subscription(event):
    user_id = event.sender_id
    if await is_user_subscribed(user_id):
        await event.edit("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! –ü–æ–ª—É—á–∞—é —Ñ–∞–π–ª...")
        # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É —Å WordPress
        try:
            async with aiohttp.ClientSession() as session:
                async with session.get(f"{WORDPRESS_URL}/123") as resp:
                    data = await resp.json()
                    link = data.get("acf", {}).get("download_link")
                    if link:
                        await bot.send_message(user_id, f"üì• –í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞:\n{link}")
                    else:
                        await bot.send_message(user_id, "‚ö†Ô∏è –°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ ACF.")
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ:", e)
            await bot.send_message(user_id, "üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞.")
    else:
        await event.answer("‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã.", alert=True)

print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
bot.run_until_disconnected()
